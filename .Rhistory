temp_solution <- res_df[, idx + 1]
temp_allocation <- strata_list[[idx]]$Allocation
for (temp_istrata in 1:temp_strata) {
temp_samples = c(temp_samples,
sample(x = which(temp_solution == temp_istrata),
size = temp_allocation[temp_istrata])
)
}
temp_loc <- Extrapolation_depths[temp_samples, c("E_km", "N_km")]
temp_loc$N_km <- temp_loc$N_km + offset_y
points(temp_loc,
pch = 16,
cex = 0.3)
}
}
}
# text(x = min(Extrapolation_depths$E_km) + x_range * 0.725,
#      y = min(Extrapolation_depths$N_km) + offset_y + y_range*0.55,
#      labels = common_names[ispp],
#      cex = 0.75)
}
{
png(filename = paste0(output_dir, "MS_solutions.png"),
width = 190,
height = 250,
units = "mm",
res = 500)
par(mfcol = c(3, 2),
mar = c(0,0,0,0))
for (sample_survey in c(FALSE, TRUE)) {
for (istrata in 2:4) {
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = with(Extrapolation_depths,
c(min(N_km) + 0*y_range,
max(N_km) + 2*y_range)),
axes = F,
ann = F,
asp = 1)
box()
mtext(side = 1,
line = -1.5,
cex = 1.25,
font = 2,
text = paste(stratas[istrata], "Strata"))
for (iboat in 1:3) {
#Which index to plot
idx = settings$id[settings$boat == iboat &
settings$strata == stratas[istrata]]
#Plot Solution
goa <- SpatialPointsDataFrame(
coords = Extrapolation_depths[,c("E_km", "N_km")],
data = data.frame(Str_no = res_df[, 1 + idx]) )
goa_ras <- raster(goa,
resolution = 5)
goa_ras <- rasterize(x = goa,
y = goa_ras,
field = "Str_no")
offset_y <- 1 * y_range * (iboat-1)
goa_ras <- raster::shift(goa_ras, dy = offset_y )
image(goa_ras,
axes = F,
ann = F,
asp = 1,
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired')),
add = T)
if (sample_survey) {
#Simulate a sample solution
temp_samples <- c()
temp_strata <- nrow(strata_list[[idx]])
temp_solution <- res_df[, idx + 1]
temp_allocation <- strata_list[[idx]]$Allocation
for (temp_istrata in 1:temp_strata) {
temp_samples = c(temp_samples,
sample(x = which(temp_solution == temp_istrata),
size = temp_allocation[temp_istrata])
)
}
temp_loc <- Extrapolation_depths[temp_samples, c("E_km", "N_km")]
temp_loc$N_km <- temp_loc$N_km + offset_y
points(temp_loc,
pch = 16,
cex = 0.3)
}
}
}
# text(x = min(Extrapolation_depths$E_km) + x_range * 0.725,
#      y = min(Extrapolation_depths$N_km) + offset_y + y_range*0.55,
#      labels = common_names[ispp],
#      cex = 0.75)
}
dev.off()
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
##################################################
####
##################################################
strata_list[[1]]
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[1]],
rect(xleft = Lower_X2 - min(Extrapolation_depths$E_km),
xright = Upper_X2 - min(Extrapolation_depths$E_km),
ybottom = Lower_X1,
ytop = Upper_X1))
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[1]],
rect(xleft = Lower_X2 + min(Extrapolation_depths$E_km),
xright = Upper_X2 + min(Extrapolation_depths$E_km),
ybottom = Lower_X1,
ytop = Upper_X1))
with(strata_list[[1]],
rect(xleft = Lower_X2 + min(Extrapolation_depths$E_km),
xright = Upper_X2 + min(Extrapolation_depths$E_km),
ybottom = Lower_X1,
ytop = Upper_X1),
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired')) )
with(strata_list[[1]],
rect(xleft = Lower_X2 + min(Extrapolation_depths$E_km),
xright = Upper_X2 + min(Extrapolation_depths$E_km),
ybottom = Lower_X1,
ytop = Upper_X1,
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))) )
with(strata_list[[1]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = rev(c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired')))) )
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[1]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = rev(c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired')))) )
range(Extrapolation_depths$DEPTH_EFH)
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[1]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = rev(c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired')))) )
settings
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[1]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))) )
with(strata_list[[1]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[1]])] ) )
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[1]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[1]])] ) )
strata_list[[1]]
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/solution_map_MS.R', echo=TRUE)
min(Extrapolation_depths$E_km)
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[2]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[2]])] ) )
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[2]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[2]])] ) )
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[2]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = rev(c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired')))[1:nrow(strata_list[[2]])] ) )
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[2]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[2]])] ) )
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
with(strata_list[[1]],
rect(xleft = rev(Lower_X2 + min(Extrapolation_depths$E_km)),
xright = rev(Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = rev(Lower_X1),
ytop = rev(Upper_X1),
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[1]])] ) )
strata_list[[1]]
with(strata_list[[1]],
rect(xleft = Lower_X2 + min(Extrapolation_depths$E_km),
xright = Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = Lower_X1,
ytop = Upper_X1,
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[1]])] ) )
with(strata_list[[1]],
rect(xleft = Lower_X2 + min(Extrapolation_depths$E_km),
xright = Upper_X2 + min(Extrapolation_depths$E_km)),
ybottom = Lower_X1,
ytop = Upper_X1,
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[1]])] )
xright = Upper_X2 + min(Extrapolation_depths$E_km),
with(strata_list[[1]],
rect(xleft = Lower_X2 + min(Extrapolation_depths$E_km),
xright = Upper_X2 + min(Extrapolation_depths$E_km),
ybottom = Lower_X1,
ytop = Upper_X1,
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[1]])] ))
temp_strata_list <- strata_list[[1]]
temp_nstrata <- nrow(temp_strata_list)
temp_nstrata
##################################################
####
##################################################
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
temp_strata_list <- strata_list[[1]]
temp_nstrata <- nrow(temp_strata_list)
rect(xleft = temp_strata_list$Lower_X2[istrata] +
min(Extrapolation_depths$E_km),
xright = temp_strata_list$Upper_X2[istrata] +
min(Extrapolation_depths$E_km),
ybottom = temp_strata_list$Lower_X1[istrata],
ytop = temp_strata_list$Upper_X1[istrata])
for (istrata in temp_nstrata:1) {
rect(xleft = temp_strata_list$Lower_X2[istrata] +
min(Extrapolation_depths$E_km),
xright = temp_strata_list$Upper_X2[istrata] +
min(Extrapolation_depths$E_km),
ybottom = temp_strata_list$Lower_X1[istrata],
ytop = temp_strata_list$Upper_X1[istrata])
}
for (istrata in temp_nstrata:1) {
for (istrata in temp_nstrata:1) {
rect(xleft = temp_strata_list$Lower_X2[istrata] +
min(Extrapolation_depths$E_km),
xright = temp_strata_list$Upper_X2[istrata] +
min(Extrapolation_depths$E_km),
ybottom = temp_strata_list$Lower_X1[istrata],
ytop = temp_strata_list$Upper_X1[istrata],
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[istrata])
}
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
temp_strata_list <- strata_list[[1]]
temp_nstrata <- nrow(temp_strata_list)
for (istrata in temp_nstrata:1) {
rect(xleft = temp_strata_list$Lower_X2[istrata] +
min(Extrapolation_depths$E_km),
xright = temp_strata_list$Upper_X2[istrata] +
min(Extrapolation_depths$E_km),
ybottom = temp_strata_list$Lower_X1[istrata],
ytop = temp_strata_list$Upper_X1[istrata],
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[istrata])
}
{
png(filename = paste0(output_dir, "MS_solutions.png"),
width = 190,
height = 250,
units = "mm",
res = 500)
par(mfcol = c(3, 3),
mar = c(0,0,0,0))
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
temp_strata_list <- strata_list[[1]]
temp_nstrata <- nrow(temp_strata_list)
for (istrata in temp_nstrata:1) {
rect(xleft = temp_strata_list$Lower_X2[istrata] +
min(Extrapolation_depths$E_km),
xright = temp_strata_list$Upper_X2[istrata] +
min(Extrapolation_depths$E_km),
ybottom = temp_strata_list$Lower_X1[istrata],
ytop = temp_strata_list$Upper_X1[istrata],
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[istrata])
}
for (sample_survey in c(FALSE, TRUE)) {
for (istrata in 2:4) {
plot(1,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = with(Extrapolation_depths,
c(min(N_km) + 0*y_range,
max(N_km) + 2*y_range)),
axes = F,
ann = F,
asp = 1)
box()
mtext(side = 1,
line = -1.5,
cex = 1.25,
font = 2,
text = paste(stratas[istrata], "Strata"))
for (iboat in 1:3) {
#Which index to plot
idx = settings$id[settings$boat == iboat &
settings$strata == stratas[istrata]]
#Plot Solution
goa <- SpatialPointsDataFrame(
coords = Extrapolation_depths[,c("E_km", "N_km")],
data = data.frame(Str_no = res_df[, 1 + idx]) )
goa_ras <- raster(goa,
resolution = 5)
goa_ras <- rasterize(x = goa,
y = goa_ras,
field = "Str_no")
offset_y <- 1 * y_range * (iboat-1)
goa_ras <- raster::shift(goa_ras, dy = offset_y )
image(goa_ras,
axes = F,
ann = F,
asp = 1,
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[1:nrow(strata_list[[idx]])],
add = T)
if (sample_survey) {
#Simulate a sample solution
temp_samples <- c()
temp_strata <- nrow(strata_list[[idx]])
temp_solution <- res_df[, idx + 1]
temp_allocation <- strata_list[[idx]]$Allocation
for (temp_istrata in 1:temp_strata) {
temp_samples = c(temp_samples,
sample(x = which(temp_solution == temp_istrata),
size = temp_allocation[temp_istrata]) )
}
temp_loc <- Extrapolation_depths[temp_samples, c("E_km", "N_km")]
temp_loc$N_km <- temp_loc$N_km + offset_y
points(temp_loc,
pch = 16,
cex = 0.3)
}
}
}
}
dev.off()
}
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/solution_map_MS.R', echo=TRUE)
nboats
##################################################
####
##################################################
par(mfcol = c(3, 3),
mar = c(3,3,1,1))
for (istrata in 2:4) {
for (iboat in 1:nboats) {
#Which index to plot
idx = settings$id[settings$boat == iboat &
settings$strata == stratas[istrata]]
temp_strata_list <- strata_list[[idx]]
temp_nstrata <- nrow(temp_strata_list)
plot(1,
las = 1,
ann = F,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
for (istrata in temp_nstrata:1) {
rect(xleft = temp_strata_list$Lower_X2[istrata] +
min(Extrapolation_depths$E_km),
xright = temp_strata_list$Upper_X2[istrata] +
min(Extrapolation_depths$E_km),
ybottom = temp_strata_list$Lower_X1[istrata],
ytop = temp_strata_list$Upper_X1[istrata],
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[istrata])
}
}
}
idx
settings
stratas
iboat
istrata
##################################################
####
##################################################
par(mfcol = c(3, 3),
mar = c(3,3,1,1))
for (istrata in 2:4) {
for (iboat in 1:nboats) {
#Which index to plot
idx = settings$id[settings$boat == iboat &
settings$strata == stratas[istrata]]
temp_strata_list <- strata_list[[idx]]
temp_nstrata <- nrow(temp_strata_list)
plot(1,
las = 1,
ann = F,
type = "n",
xlim = range(Extrapolation_depths$E_km),
ylim = range(Extrapolation_depths$DEPTH_EFH))
for (temp_istrata in temp_nstrata:1) {
rect(xleft = temp_strata_list$Lower_X2[temp_istrata] +
min(Extrapolation_depths$E_km),
xright = temp_strata_list$Upper_X2[temp_istrata] +
min(Extrapolation_depths$E_km),
ybottom = temp_strata_list$Lower_X1[temp_istrata],
ytop = temp_strata_list$Upper_X1[temp_istrata],
col = c(brewer.pal(n = 12, name = 'Paired'),
brewer.pal(n = 12, name = 'Paired'))[temp_istrata])
}
}
}
