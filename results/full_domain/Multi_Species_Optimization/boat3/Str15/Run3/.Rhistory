##################################################
####   Create dataframe of effort allocations across boats
##################################################
allocations <- data.frame(Stratum = sort(unique(GOA_allocations3$stratum)),
boat3 = aggregate(id ~ stratum,
data = GOA_allocations3,
FUN = length)$id,
boat2 = c(GOA_allocations$`Number stations`,
rep(0, 5)))
allocations$boat1 <- ceiling(allocations$boat2 / 2)
allocations$boat1 <- ifelse(allocations$boat1 == 0, 0,
ifelse(allocations$boat1 == 1, 2,
allocations$boat1))
allocations <- rbind(data.frame(Stratum = 0, boat3 = 0, boat2 = 0, boat1 = 0),
allocations)
allocations$Stratum <- 1:nrow(allocations)
scen <- data.frame(survey_type = c("cur", rep("opt", 6) ),
strata = c("cur", 3, 5, 10, 10, 15, 20),
domain = c("full_domain",
rep(c("district", "full_domain"), each = 3)))
n_iters = 500
###############################################################################
## Project:       Spatiotemporal Survey Optimization
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Conduct SamplingStrata R package multispecies stratified
##                survey optimization
###############################################################################
rm(list = ls())
##################################################
####  Install a forked version of the SamplingStrata Package from
####  zoyafuso-NOAA's Github page
####
####  Import other required packages
##################################################
library(devtools)
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
library(SamplingStrata)
library(sp)
library(RColorBrewer)
library(raster)
##################################################
####   Set up directories based on whether the optimization is being conducted
####        on a multi-species or single-species level
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents",
"C:/Users/Zack Oyafuso/Documents",
"C:/Users/zack.oyafuso/Work")[which_machine],
"/GitHub/Optimal_Allocation_GoA/")
##################################################
####   Load Data
####   Load Population CVs for use in the thresholds
##################################################
load(paste0(github_dir, "/data/optimization_data.RData"))
load(paste0(github_dir, "/data/Extrapolation_depths.RData"))
##################################################
####   Create optimization scenarios
##################################################
scen <- data.frame(nstrata = c(3,5,10, 10,15,20),
which_domain = rep(c("district", "full_domain"), each = 3))
irow = 1
isample  = 1
##################################################
####   Constants to specify before doing optimization
##################################################
which_domain <- scen$which_domain[irow]
which_domain
frame <- switch( which_domain,
"full_domain" = frame_all,
"district" = frame_district)[, c("domainvalue", "id",
"X1", "X2", "WEIGHT",
paste0("Y", spp_idx_opt),
paste0("Y", spp_idx_opt,
"_SQ_SUM"))]
names(frame)[names(frame) %in% paste0("Y", spp_idx_opt)] <-
paste0("Y", 1:ns_opt)
names(frame)[names(frame) %in% paste0("Y", spp_idx_opt, "_SQ_SUM")] <-
paste0("Y", 1:ns_opt, "_SQ_SUM")
n_dom <- length(unique(frame$domainvalue))
temp_strata <- rep(x = scen$nstrata[irow], times = n_dom)
##Initial Condition
run <- 1
###############################################################################
## Project:       Simulate Surveys
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Simulate a Stratified Random Survey of the Gulf of
##                Alaska Groundfish Survey Based on Current Stratifications
###############################################################################
rm(list = ls())
##################################################
####   Set up directories
##################################################
which_machine <- c('Zack_MAC' = 1, 'Zack_PC' = 2, 'Zack_GI_PC' = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/",
"C:/Users/zack.oyafuso/Work/")[which_machine],
"GitHub/Optimal_Allocation_GoA/results/")
##################################################
####   Import Libraries
##################################################
library(readxl)
library(sp)
##################################################
####   Load simulation functions
##################################################
source( paste0(dirname(github_dir), "/modified_functions/sim_fns.R") )
##################################
## Import Strata Allocations and spatial grid and predicted density
##################################
load(paste0(dirname(github_dir), '/data/optimization_data.RData'))
load(paste0(dirname(github_dir), '/data/Extrapolation_depths.RData'))
load(paste0(dirname(github_dir), '/data/fit_density.RData'))
load(paste0(github_dir, "MS_optimization_knitted_results.RData"))
GOA_allocations <- readxl::read_xlsx(
path = paste0(dirname(github_dir),
'/data/GOA 2019 stations by stratum.xlsx')
)
GOA_allocations3 <- readxl::read_xlsx(
path = paste0(dirname(github_dir),
'/data/GOA2019_ 3 boat_825_RNDM_stations.xlsx')
)
##################################
## Specify Management Districts
##################################
new_strata_labels = 1:length(unique(Extrapolation_depths$stratum))
names(new_strata_labels) <- sort(unique(Extrapolation_depths$stratum))
##################################
## Rename Current Stratum labels
##################################
Extrapolation_depths$stratum_new_label <-
new_strata_labels[paste(Extrapolation_depths$stratum)]
##################################################
####   Create dataframe of effort allocations across boats
##################################################
allocations <- data.frame(Stratum = sort(unique(GOA_allocations3$stratum)),
boat3 = aggregate(id ~ stratum,
data = GOA_allocations3,
FUN = length)$id,
boat2 = c(GOA_allocations$`Number stations`,
rep(0, 5)))
allocations$boat1 <- ceiling(allocations$boat2 / 2)
allocations$boat1 <- ifelse(allocations$boat1 == 0, 0,
ifelse(allocations$boat1 == 1, 2,
allocations$boat1))
allocations <- rbind(data.frame(Stratum = 0, boat3 = 0, boat2 = 0, boat1 = 0),
allocations)
allocations$Stratum <- 1:nrow(allocations)
scen <- data.frame(survey_type = c("cur", rep("opt", 6) ),
strata = c("cur", 3, 5, 10, 10, 15, 20),
domain = c("full_domain",
rep(c("district", "full_domain"), each = 3)))
n_iters = 500
###############################################################################
## Project:       Simulate Surveys
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Simulate a Stratified Random Survey of the Gulf of
##                Alaska Groundfish Survey Based on Current Stratifications
###############################################################################
rm(list = ls())
##################################################
####   Set up directories
##################################################
which_machine <- c('Zack_MAC' = 1, 'Zack_PC' = 2, 'Zack_GI_PC' = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/",
"C:/Users/zack.oyafuso/Work/")[which_machine],
"GitHub/Optimal_Allocation_GoA/results/")
##################################################
####   Import Libraries
##################################################
library(readxl)
library(sp)
##################################################
####   Load simulation functions
##################################################
source( paste0(dirname(github_dir), "/modified_functions/sim_fns.R") )
##################################
## Import Strata Allocations and spatial grid and predicted density
##################################
load(paste0(dirname(github_dir), '/data/optimization_data.RData'))
load(paste0(dirname(github_dir), '/data/Extrapolation_depths.RData'))
load(paste0(dirname(github_dir), '/data/fit_density.RData'))
load(paste0(github_dir, "MS_optimization_knitted_results.RData"))
GOA_allocations <- readxl::read_xlsx(
path = paste0(dirname(github_dir),
'/data/GOA 2019 stations by stratum.xlsx')
)
GOA_allocations3 <- readxl::read_xlsx(
path = paste0(dirname(github_dir),
'/data/GOA2019_ 3 boat_825_RNDM_stations.xlsx')
)
##################################
## Specify Management Districts
##################################
new_strata_labels = 1:length(unique(Extrapolation_depths$stratum))
names(new_strata_labels) <- sort(unique(Extrapolation_depths$stratum))
##################################
## Rename Current Stratum labels
##################################
Extrapolation_depths$stratum_new_label <-
new_strata_labels[paste(Extrapolation_depths$stratum)]
##################################################
####   Create dataframe of effort allocations across boats
##################################################
allocations <- data.frame(Stratum = sort(unique(GOA_allocations3$stratum)),
boat3 = aggregate(id ~ stratum,
data = GOA_allocations3,
FUN = length)$id,
boat2 = c(GOA_allocations$`Number stations`,
rep(0, 5)))
allocations$boat1 <- ceiling(allocations$boat2 / 2)
allocations$boat1 <- ifelse(allocations$boat1 == 0, 0,
ifelse(allocations$boat1 == 1, 2,
allocations$boat1))
allocations <- rbind(data.frame(Stratum = 0, boat3 = 0, boat2 = 0, boat1 = 0),
allocations)
allocations$Stratum <- 1:nrow(allocations)
scen <- data.frame(survey_type = c("cur", rep("opt", 6) ),
strata = c("cur", 3, 5, 10, 10, 15, 20),
domain = c("full_domain",
rep(c("district", "full_domain"), each = 3)))
n_iters = 500
irow  = 1
##################################################
####   Result Objects
##################################################
STRS_sim_mean <- STRS_sim_cv <- STRS_rel_bias_est <-
array(dim = c(n_obs_cv, n_years, ns_all, n_boats, n_iters),
dimnames = list(paste0("obsCV=", obs_cv),
paste0("year_", 1:n_years),
sci_names_all,
paste0("boat_", 1:n_boats),
NULL ))
STRS_rel_bias_index_district <- STRS_index_district <-
array(dim = c(n_obs_cv, n_years, ns_all, n_boats, n_dom, n_iters),
dimnames = list(paste0("obsCV=", obs_cv),
paste0("year_", 1:n_years),
sci_names_all,
paste0("boat_", 1:n_boats),
paste0("district_", 1:n_dom),
NULL ))
STRS_true_cv_array <- STRS_rrmse_cv_array <-
array(dim = c(n_obs_cv, n_years, ns_all, n_boats),
dimnames = list(paste0("obsCV=", obs_cv),
paste0("year_", 1:n_years),
sci_names_all,
paste0("boat_", 1:n_boats)))
isurvey <- scen$survey_type[irow]
iter = ierror = iboat = 1
sim_survey <-
do_STRS(
input = list(
"density" = D_gct[, , years_included],
"cell_areas" = Extrapolation_depths$Area_km2,
"obs_CV" = obs_cv[ierror],
"solution" = switch(
isurvey,
"cur" = Extrapolation_depths$stratum_new_label,
"opt" = {
idx <- subset(
x = settings,
subset = strata == as.numeric(scen$strata[irow]) &
boat == iboat &
domain == scen$domain[irow])$id
res_df[, paste0("sol_", idx)]
}),
"allocation" = switch(
isurvey,
"cur" = allocations[, paste0("boat", iboat)],
"opt" = {
idx <- subset(
x = settings,
subset = strata == as.numeric(scen$strata[irow]) &
boat == iboat &
domain == scen$domain[irow])$id
strata_list[[paste0("sol_", idx)]]$Allocation
}),
"true_density" = true_mean,
"true_index_district" = true_index_district,
"post_strata" = district_vals
)
)
STRS_sim_mean[ierror, , , iboat, iter] = sim_survey$mean_denisty
STRS_sim_cv[ierror, , , iboat, iter] = sim_survey$cv
STRS_rel_bias_est[ierror, , , iboat, iter] = sim_survey$rel_bias
##################################################
####   Result Objects
##################################################
STRS_sim_mean <- STRS_sim_cv <- STRS_rel_bias_est <- STRS_log_bias_est <-
array(dim = c(n_obs_cv, n_years, ns_all, n_boats, n_iters),
dimnames = list(paste0("obsCV=", obs_cv),
paste0("year_", 1:n_years),
sci_names_all,
paste0("boat_", 1:n_boats),
NULL ))
STRS_rel_bias_index_district <- STRS_log_bias_index_district
STRS_rel_bias_index_district <- STRS_log_bias_index_district <-
STRS_index_district <-
array(dim = c(n_obs_cv, n_years, ns_all, n_boats, n_dom, n_iters),
dimnames = list(paste0("obsCV=", obs_cv),
paste0("year_", 1:n_years),
sci_names_all,
paste0("boat_", 1:n_boats),
paste0("district_", 1:n_dom),
NULL ))
STRS_true_cv_array <- STRS_rrmse_cv_array <-
array(dim = c(n_obs_cv, n_years, ns_all, n_boats),
dimnames = list(paste0("obsCV=", obs_cv),
paste0("year_", 1:n_years),
sci_names_all,
paste0("boat_", 1:n_boats)))
##################################################
####   Result Objects
##################################################
STRS_sim_mean <- STRS_sim_cv <- STRS_rel_bias_est <- STRS_log_bias_est <-
array(dim = c(n_obs_cv, n_years, ns_all, n_boats, n_iters),
dimnames = list(paste0("obsCV=", obs_cv),
paste0("year_", 1:n_years),
sci_names_all,
paste0("boat_", 1:n_boats),
NULL ))
STRS_rel_bias_index_district <- STRS_log_bias_index_district <-
STRS_index_district <-
array(dim = c(n_obs_cv, n_years, ns_all, n_boats, n_dom, n_iters),
dimnames = list(paste0("obsCV=", obs_cv),
paste0("year_", 1:n_years),
sci_names_all,
paste0("boat_", 1:n_boats),
paste0("district_", 1:n_dom),
NULL ))
STRS_true_cv_array <- STRS_rrmse_cv_array <-
array(dim = c(n_obs_cv, n_years, ns_all, n_boats),
dimnames = list(paste0("obsCV=", obs_cv),
paste0("year_", 1:n_years),
sci_names_all,
paste0("boat_", 1:n_boats)))
sim_survey <-
do_STRS(
input = list(
"density" = D_gct[, , years_included],
"cell_areas" = Extrapolation_depths$Area_km2,
"obs_CV" = obs_cv[ierror],
"solution" = switch(
isurvey,
"cur" = Extrapolation_depths$stratum_new_label,
"opt" = {
idx <- subset(
x = settings,
subset = strata == as.numeric(scen$strata[irow]) &
boat == iboat &
domain == scen$domain[irow])$id
res_df[, paste0("sol_", idx)]
}),
"allocation" = switch(
isurvey,
"cur" = allocations[, paste0("boat", iboat)],
"opt" = {
idx <- subset(
x = settings,
subset = strata == as.numeric(scen$strata[irow]) &
boat == iboat &
domain == scen$domain[irow])$id
strata_list[[paste0("sol_", idx)]]$Allocation
}),
"true_density" = true_mean,
"true_index_district" = true_index_district,
"post_strata" = district_vals
)
)
STRS_sim_mean[ierror, , , iboat, iter] = sim_survey$mean_denisty
STRS_sim_cv[ierror, , , iboat, iter] = sim_survey$cv
STRS_rel_bias_est[ierror, , , iboat, iter] = sim_survey$rel_bias
STRS_log_bias_est
STRS_log_bias_est[ierror, , , iboat, iter] = sim_survey$rel_log_bias
STRS_log_bias_index_district[ierror, , , iboat, , iter] <-
sim_survey$log_bias_index_district
sim_survey$log_bias_index_district
assign(value = STRS_log_bias_est,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_log_rb_agg"))
assign(value = STRS_log_bias_index_district,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_log_rb_district"))
save(list = paste0(paste0("SUR_", isurvey, "_", scen$domain[irow],
"_STR_", scen$strata[irow]),
c("_sim_mean", "_sim_cv",
"_rb_agg", "_log_rb_agg",
"_rb_district", "_log_rb_district",
"_true_cv", "_rrmse_cv") ),
file = paste0(github_dir, "SUR_", isurvey, "_",
scen$domain[irow], "_STR_", scen$strata[irow],
"_simulation_results.RData"))
##################################
## Save results
##################################
assign(value = STRS_sim_mean,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_sim_mean"))
assign(value = STRS_sim_cv,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_sim_cv"))
assign(value = STRS_rel_bias_est,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_rb_agg"))
assign(value = STRS_log_bias_est,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_log_rb_agg"))
assign(value = STRS_rel_bias_index_district,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_rb_district"))
assign(value = STRS_log_bias_index_district,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_log_rb_district"))
assign(value = STRS_true_cv_array,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_true_cv"))
assign(value = STRS_rrmse_cv_array,
x = paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_rrmse_cv"))
save(list = paste0(paste0("SUR_", isurvey, "_", scen$domain[irow],
"_STR_", scen$strata[irow]),
c("_sim_mean", "_sim_cv",
"_rb_agg", "_log_rb_agg",
"_rb_district", "_log_rb_district",
"_true_cv", "_rrmse_cv") ),
file = paste0(github_dir, "SUR_", isurvey, "_",
scen$domain[irow], "_STR_", scen$strata[irow],
"_simulation_results.RData"))
print(paste("Finished with Iteration", iter))
source('~/GitHub/Optimal_Allocation_GoA/analysis_scripts/Simulate_Surveys.R', echo=TRUE)
source('~/GitHub/Optimal_Allocation_GoA/analysis_scripts/Simulate_Surveys.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dir()
dir(github_dir)
load("SUR_cur_full_domain_STR_cur_simulation_results.RData")
load(paste0(github_dir, "SUR_cur_full_domain_STR_cur_simulation_results.RData"))
dim(SUR_cur_full_domain_STR_cur_log_rb_district)
scen <- data.frame(survey_type = c("cur", rep("opt", 6) ),
strata = c("cur", 3, 5, 10, 10, 15, 20),
domain = c("full_domain",
rep(c("district", "full_domain"), each = 3)))
scen
irow = 2
irow = 2
scen_name <- with(scen, paste0("SUR_", survey_type, "_", domain, "_STR_",
strata) )
scen_name
irow = 2
scen_name <- with(scen,
paste0("SUR_", survey_type, "_", domain, "_STR_", strata) )
scen_name
scen_name <- with(scen[irow,],
paste0("SUR_", survey_type, "_", domain, "_STR_", strata) )
scen_name
scen_name <- with(scen[irow,],
paste0("SUR_", survey_type, "_",
domain, "_STR_", strata, "_") )
# dir(github_dir)
load(paste0(github_dir, scen_name, "simulation_results.RData"))
paste0(scen_name)
ls(
)
paste0(scen_name, "log_rb_district")
paste0(scen_name, "rb_district")
save(list = paste0(scen_name, "log_rb_district"),
file = paste0(scen_name, "log_rb_district.RData"))
save(list = paste0(scen_name, "log_rb_district"),
file = paste0(github_dir, scen_name, "log_rb_district.RData"))
save(list = paste0(scen_name, "rb_district"),
file = paste0(github_dir, scen_name, "rb_district.RData"))
paste0(github_dir, scen_name, "simulation_results")
###############################################################################
## Project:       Simulate Surveys
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Simulate a Stratified Random Survey of the Gulf of
##                Alaska Groundfish Survey Based on Current Stratifications
###############################################################################
rm(list = ls())
##################################################
####   Set up directories
##################################################
which_machine <- c('Zack_MAC' = 1, 'Zack_PC' = 2, 'Zack_GI_PC' = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/",
"C:/Users/zack.oyafuso/Work/")[which_machine],
"GitHub/Optimal_Allocation_GoA/results/")
scen <- data.frame(survey_type = c("cur", rep("opt", 6) ),
strata = c("cur", 3, 5, 10, 10, 15, 20),
domain = c("full_domain",
rep(c("district", "full_domain"), each = 3)))
irow = 2
scen_name <- with(scen[irow,],
paste0("SUR_", survey_type, "_",
domain, "_STR_", strata, "_") )
# dir(github_dir)
load(paste0(github_dir, scen_name, "simulation_results.RData"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
scen_name <- paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow])
isurvey <- scen$survey_type[irow]
scen_name <- paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow])
scen_name
scen_name <- paste0("SUR_", isurvey, "_", scen$domain[irow], "_STR_",
scen$strata[irow], "_")
scen_name
scen_name
source('~/GitHub/Optimal_Allocation_GoA/analysis_scripts/Simulate_Surveys.R', echo=TRUE)
source('~/GitHub/Optimal_Allocation_GoA/analysis_scripts/Simulate_Surveys.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
