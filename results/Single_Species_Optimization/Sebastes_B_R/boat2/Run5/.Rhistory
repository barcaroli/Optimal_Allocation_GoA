#
# ####################################
# ## Save
# ####################################
# save(list = c("res_df", "settings", "strata_list", "strata_stats_list"),
#      file = paste0(github_dir,
#                    "results/Single_Species_Optimization/",
#                    "optimization_knitted_results.RData"))
settings
master_settings
master_settings
master_settings_agg
source('~/.active-rstudio-document', echo=TRUE)
sci_names_opt[6]
###############################################################################
## Project:       Spatiotemporal Survey Optimization
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Conduct SamplingStrata R package multispecies stratified
##                survey optimization
###############################################################################
rm(list = ls())
##################################################
####   Set up directories based on whether the optimization is being conducted
####        on a multi-species or single-species level
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents",
"C:/Users/Zack Oyafuso/Documents",
"C:/Users/zack.oyafuso/Work")[which_machine],
"/GitHub/Optimal_Allocation_GoA/results/",
"Single_Species_Optimization/")
##################################################
####  Install a forked version of the SamplingStrata Package from
####  zoyafuso-NOAA's Github page
####
####  Import other required packages
##################################################
library(devtools)
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
library(SamplingStrata)
library(sp)
library(RColorBrewer)
library(raster)
##################################################
####   Load Data
####   Load Population CVs for use in the thresholds
##################################################
load(paste0(dirname(dirname(github_dir)), "/data/optimization_data.RData"))
load(paste0(dirname(dirname(github_dir)), "/data/Extrapolation_depths.RData"))
load(paste0(dirname(github_dir), "/Population_Variances.RData"))
which_species <- 6
head(frame)
frame <- frame[, c("domainvalue", "id", "X1", "X2", "WEIGHT",
paste0("Y", which_species),
paste0("Y", which_species, "_SQ_SUM"))]
names(frame)[6:7] <- paste0("Y", c("1", "1_SQ_SUM") )
github_dir = paste0(github_dir,
gsub(x = sci_names_opt[which_species],
pattern = ' ',
replacement = '_'), '/')
if(!dir.exists(github_dir)) dir.create(github_dir, recursive = T)
github_dir
par(mfrow = c(6,6),
mar = c(2,2,0,0))
isample <- 1
##Initial Condition
Run <- 1
##Initial Condition
Run <- 2
paste0(github_dir)
paste0(github_dir, "boat", isample, "/result_list.RData")
load( paste0(github_dir, "boat", isample, "/result_list.RData") )
load( paste0(github_dir, "boat", isample, "/Run", Run, "/result_list.RData") )
result_list$CV_constraints
SRS_Pop_CV[[isample]][, which_species]
##################################################
####   Run optimization
##################################################
par(mfrow = c(6,6),
mar = c(2,2,0,0))
isample <- 1
##Initial Condition
Run <- 2
load( paste0(github_dir, "boat", isample, "/Run", Run, "/result_list.RData") )
#Create CV dataframe
cv <- list()
for (spp in 1:1)
cv[[paste0("CV", spp)]] <- result_list$CV_constraints * 1.1
cv[["DOM"]] <- 1:5
cv[["domainvalue"]] <- 1:5
cv <- as.data.frame(cv)
(Run <- Run + 1)
#Set wd for output files, create a directory if it doesn"t exist yet
temp_dir = paste0(github_dir, "boat", isample, "/Run", Run)
if(!dir.exists(temp_dir)) dir.create(temp_dir, recursive = T)
setwd(temp_dir)
#Run optimization
solution <- optimStrata(method = "continuous",
errors = cv,
framesamp = frame,
iter = 300,
pops = 300,
elitism_rate = 0.1,
mut_chance = 1 / (c(5,5,5,5,5) + 1),
nStrata = c(5,5,5,5,5),
showPlot = T,
writeFiles = T)
result_list$CV_constraints
unlist(result_list$CV_constraints)
as.vector(result_list$CV_constraints)
##################################################
####   Run optimization
##################################################
par(mfrow = c(6,6),
mar = c(2,2,0,0))
isample <- 1
##Initial Condition
Run <- 2
load( paste0(github_dir, "boat", isample, "/Run", Run, "/result_list.RData") )
#Create CV dataframe
cv <- list()
for (spp in 1:1)
cv[[paste0("CV", spp)]] <- as.vector(result_list$CV_constraints) * 1.1
cv[["DOM"]] <- 1:5
cv[["domainvalue"]] <- 1:5
cv <- as.data.frame(cv)
(Run <- Run + 1)
#Set wd for output files, create a directory if it doesn"t exist yet
temp_dir = paste0(github_dir, "boat", isample, "/Run", Run)
if(!dir.exists(temp_dir)) dir.create(temp_dir, recursive = T)
setwd(temp_dir)
#Run optimization
solution <- optimStrata(method = "continuous",
errors = cv,
framesamp = frame,
iter = 300,
pops = 300,
elitism_rate = 0.1,
mut_chance = 1 / (c(5,5,5,5,5) + 1),
nStrata = c(5,5,5,5,5),
showPlot = T,
writeFiles = T)
###############################################################################
## Project:       Spatiotemporal Survey Optimization
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Conduct SamplingStrata R package multispecies stratified
##                survey optimization
###############################################################################
rm(list = ls())
##################################################
####   Set up directories based on whether the optimization is being conducted
####        on a multi-species or single-species level
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents",
"C:/Users/Zack Oyafuso/Documents",
"C:/Users/zack.oyafuso/Work")[which_machine],
"/GitHub/Optimal_Allocation_GoA/results/",
"Single_Species_Optimization/")
##################################################
####  Install a forked version of the SamplingStrata Package from
####  zoyafuso-NOAA's Github page
####
####  Import other required packages
##################################################
library(devtools)
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
library(SamplingStrata)
library(sp)
library(RColorBrewer)
library(raster)
##################################################
####   Load Data
####   Load Population CVs for use in the thresholds
##################################################
load(paste0(dirname(dirname(github_dir)), "/data/optimization_data.RData"))
load(paste0(dirname(dirname(github_dir)), "/data/Extrapolation_depths.RData"))
load(paste0(dirname(github_dir), "/Population_Variances.RData"))
##################################################
####   Some Constants
##################################################
#Choose a boat level
which_species <- 6
frame <- frame[, c("domainvalue", "id", "X1", "X2", "WEIGHT",
paste0("Y", which_species),
paste0("Y", which_species, "_SQ_SUM"))]
names(frame)[6:7] <- paste0("Y", c("1", "1_SQ_SUM") )
github_dir = paste0(github_dir,
gsub(x = sci_names_opt[which_species],
pattern = ' ',
replacement = '_'), '/')
if(!dir.exists(github_dir)) dir.create(github_dir, recursive = T)
##################################################
####   Run optimization
##################################################
par(mfrow = c(6,6),
mar = c(2,2,0,0))
isample <- 1
##Initial Condition
Run <- 2
load( paste0(github_dir, "boat", isample, "/Run", Run, "/result_list.RData") )
#Create CV dataframe
cv <- list()
for (spp in 1:1)
cv[[paste0("CV", spp)]] <- as.vector(result_list$CV_constraints) * 1.05
cv[["DOM"]] <- 1:5
cv[["domainvalue"]] <- 1:5
cv <- as.data.frame(cv)
(Run <- Run + 1)
#Set wd for output files, create a directory if it doesn"t exist yet
temp_dir = paste0(github_dir, "boat", isample, "/Run", Run)
if(!dir.exists(temp_dir)) dir.create(temp_dir, recursive = T)
setwd(temp_dir)
#Run optimization
solution <- optimStrata(method = "continuous",
errors = cv,
framesamp = frame,
iter = 300,
pops = 300,
elitism_rate = 0.1,
mut_chance = 1 / (c(5,5,5,5,5) + 1),
nStrata = c(5,5,5,5,5),
showPlot = T,
writeFiles = T)
source('~/.active-rstudio-document', echo=TRUE)
sum_stats <- summaryStrata(solution$framenew,
solution$aggr_strata,
progress=FALSE)
plot_solution <- as.factor(paste(solution$framenew$DOMAINVALUE,
solution$framenew$STRATO))
plot_solution <- as.integer(plot_solution)
##Save a plot of the olution
goa <- sp::SpatialPointsDataFrame(
coords = Extrapolation_depths[, c("Lon", "Lat")],
data = data.frame(Str_no = plot_solution) )
goa_ras <- raster::raster(x = goa,
resolution = 0.075)
goa_ras <- raster::rasterize(x = goa,
y = goa_ras,
field = "Str_no")
png(filename = "solution.png",
width = 5,
height = 5,
units = "in",
res = 500)
plot(goa_ras,
axes = F,
col = rep(brewer.pal(n = 10, name = "Spectral"), times = 3) )
abline(v = districts$E_lon)
dev.off()
## Save Output
CV_constraints <- expected_CV(strata = solution$aggr_strata)
current_n <- sum(sum_stats$Allocation)
result_list <- list(solution = solution,
sum_stats = sum_stats,
CV_constraints = CV_constraints,
n = current_n)
save(list = "result_list", file = "result_list.RData")
current_n
isample <- 2
##Initial Condition
Run <- 2
load( paste0(github_dir, "boat", isample, "/Run", Run, "/result_list.RData") )
result_list$CV_constraints
result_list$n
source('~/.active-rstudio-document', echo=TRUE)
###############################################################################
## Project:       Spatiotemporal Survey Optimization
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Conduct SamplingStrata R package multispecies stratified
##                survey optimization
###############################################################################
rm(list = ls())
##################################################
####   Set up directories based on whether the optimization is being conducted
####        on a multi-species or single-species level
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents",
"C:/Users/Zack Oyafuso/Documents",
"C:/Users/zack.oyafuso/Work")[which_machine],
"/GitHub/Optimal_Allocation_GoA/results/",
"Single_Species_Optimization/")
##################################################
####  Install a forked version of the SamplingStrata Package from
####  zoyafuso-NOAA's Github page
####
####  Import other required packages
##################################################
library(devtools)
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
library(SamplingStrata)
library(sp)
library(RColorBrewer)
library(raster)
##################################################
####   Load Data
####   Load Population CVs for use in the thresholds
##################################################
load(paste0(dirname(dirname(github_dir)), "/data/optimization_data.RData"))
load(paste0(dirname(dirname(github_dir)), "/data/Extrapolation_depths.RData"))
load(paste0(dirname(github_dir), "/Population_Variances.RData"))
##################################################
####   Some Constants
##################################################
#Choose a boat level
which_species <- 9
frame <- frame[, c("domainvalue", "id", "X1", "X2", "WEIGHT",
paste0("Y", which_species),
paste0("Y", which_species, "_SQ_SUM"))]
names(frame)[6:7] <- paste0("Y", c("1", "1_SQ_SUM") )
github_dir = paste0(github_dir,
gsub(x = sci_names_opt[which_species],
pattern = ' ',
replacement = '_'), '/')
if(!dir.exists(github_dir)) dir.create(github_dir, recursive = T)
##################################################
####   Run optimization
##################################################
par(mfrow = c(6,6),
mar = c(2,2,0,0))
isample <- 1
##Initial Condition
Run <- 3
load( paste0(github_dir, "boat", isample, "/Run", Run, "/result_list.RData") )
result_list$n
source('~/.active-rstudio-document', echo=TRUE)
sci_names_opt[10]
###############################################################################
## Project:       Spatiotemporal Survey Optimization
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Conduct SamplingStrata R package multispecies stratified
##                survey optimization
###############################################################################
rm(list = ls())
##################################################
####   Set up directories based on whether the optimization is being conducted
####        on a multi-species or single-species level
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents",
"C:/Users/Zack Oyafuso/Documents",
"C:/Users/zack.oyafuso/Work")[which_machine],
"/GitHub/Optimal_Allocation_GoA/results/",
"Single_Species_Optimization/")
##################################################
####  Install a forked version of the SamplingStrata Package from
####  zoyafuso-NOAA's Github page
####
####  Import other required packages
##################################################
library(devtools)
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
library(SamplingStrata)
library(sp)
library(RColorBrewer)
library(raster)
##################################################
####   Load Data
####   Load Population CVs for use in the thresholds
##################################################
load(paste0(dirname(dirname(github_dir)), "/data/optimization_data.RData"))
load(paste0(dirname(dirname(github_dir)), "/data/Extrapolation_depths.RData"))
load(paste0(dirname(github_dir), "/Population_Variances.RData"))
##################################################
####   Some Constants
##################################################
#Choose a boat level
which_species <- 10
frame <- frame[, c("domainvalue", "id", "X1", "X2", "WEIGHT",
paste0("Y", which_species),
paste0("Y", which_species, "_SQ_SUM"))]
names(frame)[6:7] <- paste0("Y", c("1", "1_SQ_SUM") )
github_dir = paste0(github_dir,
gsub(x = sci_names_opt[which_species],
pattern = ' ',
replacement = '_'), '/')
if(!dir.exists(github_dir)) dir.create(github_dir, recursive = T)
##################################################
####   Run optimization
##################################################
par(mfrow = c(6,6),
mar = c(2,2,0,0))
isample <- 2
##Initial Condition
Run <- 3
load( paste0(github_dir, "boat", isample, "/Run", Run, "/result_list.RData") )
#Create CV dataframe
result_list$n
source('~/.active-rstudio-document', echo=TRUE)
###############################################################################
## Project:       Spatiotemporal Survey Optimization
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Conduct SamplingStrata R package multispecies stratified
##                survey optimization
###############################################################################
rm(list = ls())
##################################################
####   Set up directories based on whether the optimization is being conducted
####        on a multi-species or single-species level
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents",
"C:/Users/Zack Oyafuso/Documents",
"C:/Users/zack.oyafuso/Work")[which_machine],
"/GitHub/Optimal_Allocation_GoA/results/",
"Single_Species_Optimization/")
##################################################
####  Install a forked version of the SamplingStrata Package from
####  zoyafuso-NOAA's Github page
####
####  Import other required packages
##################################################
library(devtools)
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
library(SamplingStrata)
library(sp)
library(RColorBrewer)
library(raster)
##################################################
####   Load Data
####   Load Population CVs for use in the thresholds
##################################################
load(paste0(dirname(dirname(github_dir)), "/data/optimization_data.RData"))
load(paste0(dirname(dirname(github_dir)), "/data/Extrapolation_depths.RData"))
load(paste0(dirname(github_dir), "/Population_Variances.RData"))
##################################################
####   Some Constants
##################################################
#Choose a boat level
which_species <- 10
frame <- frame[, c("domainvalue", "id", "X1", "X2", "WEIGHT",
paste0("Y", which_species),
paste0("Y", which_species, "_SQ_SUM"))]
names(frame)[6:7] <- paste0("Y", c("1", "1_SQ_SUM") )
github_dir = paste0(github_dir,
gsub(x = sci_names_opt[which_species],
pattern = ' ',
replacement = '_'), '/')
if(!dir.exists(github_dir)) dir.create(github_dir, recursive = T)
##################################################
####   Run optimization
##################################################
par(mfrow = c(6,6),
mar = c(2,2,0,0))
isample <- 1
##Initial Condition
Run <- 3
load( paste0(github_dir, "boat", isample, "/Run", Run, "/result_list.RData") )
result_list$n
source('~/.active-rstudio-document', echo=TRUE)
###############################################################################
## Project:       Spatiotemporal Survey Optimization
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Conduct SamplingStrata R package multispecies stratified
##                survey optimization
###############################################################################
rm(list = ls())
##################################################
####   Set up directories based on whether the optimization is being conducted
####        on a multi-species or single-species level
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents",
"C:/Users/Zack Oyafuso/Documents",
"C:/Users/zack.oyafuso/Work")[which_machine],
"/GitHub/Optimal_Allocation_GoA/results/",
"Single_Species_Optimization/")
##################################################
####  Install a forked version of the SamplingStrata Package from
####  zoyafuso-NOAA's Github page
####
####  Import other required packages
##################################################
library(devtools)
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
library(SamplingStrata)
library(sp)
library(RColorBrewer)
library(raster)
##################################################
####   Load Data
####   Load Population CVs for use in the thresholds
##################################################
load(paste0(dirname(dirname(github_dir)), "/data/optimization_data.RData"))
load(paste0(dirname(dirname(github_dir)), "/data/Extrapolation_depths.RData"))
load(paste0(dirname(github_dir), "/Population_Variances.RData"))
##################################################
####   Some Constants
##################################################
#Choose a boat level
which_species <- 11
frame <- frame[, c("domainvalue", "id", "X1", "X2", "WEIGHT",
paste0("Y", which_species),
paste0("Y", which_species, "_SQ_SUM"))]
names(frame)[6:7] <- paste0("Y", c("1", "1_SQ_SUM") )
github_dir = paste0(github_dir,
gsub(x = sci_names_opt[which_species],
pattern = ' ',
replacement = '_'), '/')
if(!dir.exists(github_dir)) dir.create(github_dir, recursive = T)
##################################################
####   Run optimization
##################################################
par(mfrow = c(6,6),
mar = c(2,2,0,0))
isample <- 2
##Initial Condition
Run <- 4
load( paste0(github_dir, "boat", isample, "/Run", Run, "/result_list.RData") )
result_list$n
source('~/.active-rstudio-document', echo=TRUE)
