cex = 1.25)
axis(side = 1, at = seq(from = 0, to = 0.4, by = 0.05))
axis(side = 2,
labels = common_names,
at = 1:ns,
las = 1)
legend("bottomright",
pch = c(rep(16, 4), NA),
lty = c(rep(NA, 4), 1),
lwd = 2,
col = c("red", "green", "blue", "black", "black"),
legend = c("SS STRS", "Current STRS", "Optimized STRS", "SRS",
"Range of Est. VAST CVs"),
cex = 1.25)
# dev.off()
###############################################################################
## Project:         Plot Population CVs of different sampling designs
## Author:          Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:
###############################################################################
rm(list = ls())
##################################################
####  Set up directories
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2)[1]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/")[which_machine],
"GitHub/Optimal_Allocation_GoA/")
github_dir2 <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/")[which_machine],
"GitHub/MS_OM_GoA/data/")
output_dir <- paste0(c("/Users/zackoyafuso/",
"C:/Users/Zack Oyafuso/")[which_machine],
"Google Drive/MS_Optimizations/TechMemo/figures/")
##################################################
####  Load Data
##################################################
load(paste0(github_dir,
"data/optimization_data.RData"))
common_names[11] <- "blackspotted/rougheye\nrockfishes"
load(paste0(github_dir,
"results/Spatiotemporal_Optimization/",
"optimization_knitted_results.RData"))
load(paste0(github_dir,
"results/Population_Variances.RData"))
##################################################
####  Import Observed DBEs, calculate ranges of sample CVs
##################################################
DBE <- readRDS(paste0(github_dir2,
"GOA_biomass_indices_wnames.rds"))
DBE <- subset(DBE,
SPECIES_NAME %in% sci_names &
YEAR %in% (1996:2019)[Years2Include])
DBE$BIOMASS_CV <- sqrt(DBE$VAR_WGT_CPUE) / DBE$MEAN_WGT_CPUE
DBE_CV <- aggregate(BIOMASS_CV ~ SPECIES_NAME,
data = DBE,
FUN = range)
load(paste0(github_dir,
"data/vast_index.RData"))
vast_ranges <- aggregate(cv ~ spp,
data = vast_index,
FUN = range)$cv
##################################################
####  Plot
##################################################
# png(filename = paste0(output_dir, "PopCVs.png"),
#     width = 190,
#     height = 150,
#     units = "mm",
#     res = 500)
par(mar = c(4,11,1,1))
plot(1,
type = "n",
pch = 16,
cex = 1.5,
ylim = c(1, ns),
xlim = c(0, 0.45),
axes = F,
ann = F)
box()
abline(h = 1:ns,
col = "lightgrey",
lty = "dashed")
mtext(side = 1,
text = "Population CV",
line = 2.5,
cex = 1.25,
font = 2)
segments(x0 = vast_ranges[, 1],
x1 = vast_ranges[, 2],
y0 = (1:ns) + 0.1 , lwd = 2)
matpoints(y = 1:ns,
x = cbind(SRS_Pop_CV[, 2],
SS_STRS_Pop_CV[, 2],
unlist(settings[settings$strata == 15 &
settings$boat == 2,
paste0("CV_", 1:ns)]),
Current_STRS_Pop_CV[, 2]),
pch = 16,
col = c("black", "red", "blue", "green"),
cex = 1.25)
axis(side = 1, at = seq(from = 0, to = 0.4, by = 0.05))
axis(side = 2,
labels = common_names,
at = 1:ns,
las = 1)
legend("bottomright",
pch = c(rep(16, 4), NA),
lty = c(rep(NA, 4), 1),
lwd = 2,
col = c("red", "green", "blue", "black", "black"),
legend = c("SS STRS", "Current STRS", "Optimized STRS", "SRS",
"Range of Est. VAST CVs"),
cex = 1.25)
# dev.off()
DBE
DBE_CV
DBE_CV <- aggregate(BIOMASS_CV ~ SPECIES_NAME,
data = DBE,
FUN = range)$BIOMASS_CV
DBE_CV
segments(x0 = DBE_CV[, 1],
x1 = DBE_CV[, 2],
y0 = (1:ns) - 0.1 ,
lwd = 2,
col = "brown")
###############################################################################
## Project:         Plot Population CVs of different sampling designs
## Author:          Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:
###############################################################################
rm(list = ls())
##################################################
####  Set up directories
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2)[1]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/")[which_machine],
"GitHub/Optimal_Allocation_GoA/")
github_dir2 <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/")[which_machine],
"GitHub/MS_OM_GoA/data/")
output_dir <- paste0(c("/Users/zackoyafuso/",
"C:/Users/Zack Oyafuso/")[which_machine],
"Google Drive/MS_Optimizations/TechMemo/figures/")
##################################################
####  Load Data
##################################################
load(paste0(github_dir,
"data/optimization_data.RData"))
common_names[11] <- "blackspotted/rougheye\nrockfishes"
load(paste0(github_dir,
"results/Spatiotemporal_Optimization/",
"optimization_knitted_results.RData"))
load(paste0(github_dir,
"results/Population_Variances.RData"))
##################################################
####  Import Observed DBEs, calculate ranges of sample CVs
##################################################
DBE <- readRDS(paste0(github_dir2,
"GOA_biomass_indices_wnames.rds"))
DBE <- subset(DBE,
SPECIES_NAME %in% sci_names &
YEAR %in% (1996:2019)[Years2Include])
DBE$BIOMASS_CV <- sqrt(DBE$VAR_WGT_CPUE) / DBE$MEAN_WGT_CPUE
DBE_CV <- aggregate(BIOMASS_CV ~ SPECIES_NAME,
data = DBE,
FUN = range)$BIOMASS_CV
load(paste0(github_dir,
"data/vast_index.RData"))
vast_ranges <- aggregate(cv ~ spp,
data = vast_index,
FUN = range)$cv
##################################################
####  Plot
##################################################
# png(filename = paste0(output_dir, "PopCVs.png"),
#     width = 190,
#     height = 150,
#     units = "mm",
#     res = 500)
par(mar = c(4,11,1,1))
plot(1,
type = "n",
pch = 16,
cex = 1.5,
ylim = c(1, ns),
xlim = c(0, 0.6),
axes = F,
ann = F)
box()
abline(h = 1:ns,
col = "lightgrey",
lty = "dashed")
mtext(side = 1,
text = "Population CV",
line = 2.5,
cex = 1.25,
font = 2)
segments(x0 = vast_ranges[, 1],
x1 = vast_ranges[, 2],
y0 = (1:ns) + 0.1 ,
lwd = 2)
segments(x0 = DBE_CV[, 1],
x1 = DBE_CV[, 2],
y0 = (1:ns) - 0.1 ,
lwd = 2,
col = "brown")
matpoints(y = 1:ns,
x = cbind(SRS_Pop_CV[, 2],
SS_STRS_Pop_CV[, 2],
unlist(settings[settings$strata == 15 &
settings$boat == 2,
paste0("CV_", 1:ns)]),
Current_STRS_Pop_CV[, 2]),
pch = 16,
col = c("black", "red", "blue", "green"),
cex = 1.25)
axis(side = 1, at = seq(from = 0, to = 0.4, by = 0.05))
axis(side = 2,
labels = common_names,
at = 1:ns,
las = 1)
legend("bottomright",
pch = c(rep(16, 4), NA),
lty = c(rep(NA, 4), 1),
lwd = 2,
col = c("red", "green", "blue", "black", "black"),
legend = c("SS STRS", "Current STRS", "Optimized STRS", "SRS",
"Range of Est. VAST CVs"),
cex = 1.25)
# dev.off()
###############################################################################
## Project:         Plot Population CVs of different sampling designs
## Author:          Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:
###############################################################################
rm(list = ls())
##################################################
####  Set up directories
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2)[1]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/")[which_machine],
"GitHub/Optimal_Allocation_GoA/")
github_dir2 <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/")[which_machine],
"GitHub/MS_OM_GoA/data/")
output_dir <- paste0(c("/Users/zackoyafuso/",
"C:/Users/Zack Oyafuso/")[which_machine],
"Google Drive/MS_Optimizations/TechMemo/figures/")
##################################################
####  Load Data
##################################################
load(paste0(github_dir,
"data/optimization_data.RData"))
common_names[11] <- "blackspotted/rougheye\nrockfishes"
load(paste0(github_dir,
"results/Spatiotemporal_Optimization/",
"optimization_knitted_results.RData"))
load(paste0(github_dir,
"results/Population_Variances.RData"))
##################################################
####  Import Observed DBEs, calculate ranges of sample CVs
##################################################
DBE <- readRDS(paste0(github_dir2,
"GOA_biomass_indices_wnames.rds"))
DBE <- subset(DBE,
SPECIES_NAME %in% sci_names &
YEAR %in% (1996:2019)[Years2Include])
DBE$BIOMASS_CV <- sqrt(DBE$VAR_WGT_CPUE) / DBE$MEAN_WGT_CPUE
DBE_CV <- aggregate(BIOMASS_CV ~ SPECIES_NAME,
data = DBE,
FUN = range)$BIOMASS_CV
load(paste0(github_dir,
"data/vast_index.RData"))
vast_ranges <- aggregate(cv ~ spp,
data = vast_index,
FUN = range)$cv
##################################################
####  Plot
##################################################
# png(filename = paste0(output_dir, "PopCVs.png"),
#     width = 190,
#     height = 150,
#     units = "mm",
#     res = 500)
par(mar = c(4,11,1,1))
plot(1,
type = "n",
pch = 16,
cex = 1.5,
ylim = c(1, ns),
xlim = c(0, 0.75),
axes = F,
ann = F)
box()
abline(h = 1:ns,
col = "lightgrey",
lty = "dashed")
mtext(side = 1,
text = "Population CV",
line = 2.5,
cex = 1.25,
font = 2)
segments(x0 = vast_ranges[, 1],
x1 = vast_ranges[, 2],
y0 = (1:ns) + 0.1 ,
lwd = 2)
segments(x0 = DBE_CV[, 1],
x1 = DBE_CV[, 2],
y0 = (1:ns) - 0.1 ,
lwd = 2,
col = "brown")
matpoints(y = 1:ns,
x = cbind(SRS_Pop_CV[, 2],
SS_STRS_Pop_CV[, 2],
unlist(settings[settings$strata == 15 &
settings$boat == 2,
paste0("CV_", 1:ns)]),
Current_STRS_Pop_CV[, 2]),
pch = 16,
col = c("black", "red", "blue", "green"),
cex = 1.25)
axis(side = 1, at = seq(from = 0, to = 0.4, by = 0.05))
axis(side = 2,
labels = common_names,
at = 1:ns,
las = 1)
legend("bottomright",
pch = c(rep(16, 4), NA),
lty = c(rep(NA, 4), 1),
lwd = 2,
col = c("red", "green", "blue", "black", "black"),
legend = c("SS STRS", "Current STRS", "Optimized STRS", "SRS",
"Range of Est. VAST CVs"),
cex = 1.25)
# dev.off()
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
source('~/Documents/GitHub/Optimal_Allocation_GoA/figure_plot/PopCVs.R', echo=TRUE)
##################################################
####  Install a forked version of the SamplingStrata Package from
####  zoyafuso-NOAA's Github page
####
####  Import other required packages
##################################################
library(devtools)
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
install.packages(doParallel)
install.packages("doParallel")
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
R.version()
R.version
###############################################################################
## Project:       Spatiotemporal Survey Optimization
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   Conduct SamplingStrata R package multispecies stratified
##                survey optimization
###############################################################################
rm(list = ls())
##################################################
####   Set up directories based on whether the optimization is being conducted
####        on a multi-species or single-species level
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[1]
which_method = c("Multi_Species" = 1,
"Single_Species" = 2)[2]
github_dir <- paste0(c("/Users/zackoyafuso/Documents",
"C:/Users/Zack Oyafuso/Documents",
"C:/Users/zack.oyafuso/Work")[which_machine],
"/GitHub/Optimal_Allocation_GoA/results/",
c("Spatiotemporal_Optimization/",
"Single_Species_Optimization/")[which_method])
##################################################
####  Install a forked version of the SamplingStrata Package from
####  zoyafuso-NOAA's Github page
####
####  Import other required packages
##################################################
library(devtools)
devtools::install_github(repo = "zoyafuso-NOAA/SamplingStrata")
library(SamplingStrata)
library(sp)
library(RColorBrewer)
library(raster)
##################################################
####   Load Data
####   Load Population CVs for use in the thresholds
##################################################
load(paste0(dirname(dirname(github_dir)), "/data/optimization_data.RData"))
load(paste0(dirname(dirname(github_dir)), "/data/Extrapolation_depths.RData"))
if (which_method == 1) load(paste0(dirname(github_dir),
"/Population_Variances.RData"))
##################################################
####   Some Constants
##################################################
stratas <- switch(which_method,
"1" = stratas,
"2" =  10)
NStrata <- length(stratas)
ns_opt <- c(15, 1)[which_method]
which_species <- switch(which_method,
"1" = 1:ns_opt,
"2" = 3)
##################################################
####   If Single_Species: subset just the one species
##################################################
if (which_method == 2) {
frame <- frame[, c("domainvalue", "id", "X1", "X2", "WEIGHT",
paste0("Y", which_species),
paste0("Y", which_species, "_SQ_SUM"))]
names(frame)[6:7] <- paste0("Y", c("1", "1_SQ_SUM") )
github_dir = paste0(github_dir,
gsub(x = sci_names_opt[which_species],
pattern = ' ',
replacement = '_'), '/')
if(!dir.exists(github_dir)) dir.create(github_dir)
# Lower CV threshold is not needed for a single-species analysis
SS_STRS_Pop_CV <- matrix(data = 0,
nrow = ns_opt,
ncol = 3)
SRS_Pop_CV <- matrix(data = c(0.09, 0.1, 0.1),
byrow = T,
ncol = 3)
}
##################################################
####   Run optimization
##################################################
par(mfrow = c(6,6),
mar = c(2,2,0,0))
#Choose a boat level
isample <- 1
istrata <- 1
for (istrata in 1:NStrata) {
temp_strata <- stratas[istrata]
##Initial Condition
Run <- 1
current_n <- 0
CV_constraints <- SRS_Pop_CV[, isample]
#Create CV dataframe
cv <- list()
for (spp in 1:ns_opt)
cv[[paste0("CV", spp)]] <- as.numeric(CV_constraints[spp])
cv[["DOM"]] <- 1
cv[["domainvalue"]] <- 1
cv <- as.data.frame(cv)
while (current_n <= c(280, 550, 820)[isample] ) {
#Set wd for output files, create a directory if it doesn"t exist yet
temp_dir = paste0(github_dir, "boat", isample, "/Str", temp_strata,
"Run", Run)
if(!dir.exists(temp_dir)) dir.create(temp_dir, recursive = T)
setwd(temp_dir)
#Run optimization
solution <- optimStrata(method = "continuous",
errors = cv,
framesamp = frame,
iter = 300,
pops = 30,
elitism_rate = 0.1,
mut_chance = 1 / (temp_strata + 1),
nStrata = temp_strata,
showPlot = T,
writeFiles = T)
sum_stats <- summaryStrata(solution$framenew,
solution$aggr_strata,
progress=FALSE)
#Plot Solution
goa <- sp::SpatialPointsDataFrame(
coords = Extrapolation_depths[,c("E_km", "N_km")],
data = data.frame(Str_no = solution$framenew$STRATO) )
goa_ras <- raster::raster(x = goa,
resolution = 5)
goa_ras <- raster::rasterize(x = goa,
y = goa_ras,
field = "Str_no")
png(filename = "solution.png",
width = 5,
height = 5,
units = "in",
res = 500)
plot(goa_ras, axes = F,
col = terrain.colors(temp_strata)[sample(temp_strata)])
dev.off()
#Save Output
CV_constraints <- expected_CV(strata = solution$aggr_strata)
current_n <- sum(sum_stats$Allocation)
result_list <- list(solution = solution,
sum_stats = sum_stats,
CV_constraints = CV_constraints,
n = current_n)
save(list = "result_list", file = "result_list.RData")
#Set up next run by changing upper CV constraints
Run <- Run + 1
CV_constraints <- 0.95*CV_constraints + 0.1*(SS_STRS_Pop_CV[, isample])
#Create CV dataframe in the formmat of SamplingStrata
cv <- list()
for (spp in 1:ns_opt)
cv[[paste0("CV", spp)]] <- as.numeric(CV_constraints[spp])
cv[["DOM"]] <- 1
cv[["domainvalue"]] <- 1
cv <- as.data.frame(cv)
}
}
source('~/Documents/GitHub/Optimal_Allocation_GoA/analysis_scripts/Survey_Optimization.R', echo=TRUE)
