areas = c(1, 9) #square meters
true_density = c(rnorm(100, 100, 10), rnorm(900, 3, 1/3))
true_density
stratum = c(rep(1, 100), rep(2, 900))
stratum
true_mean = mean(true_density)
true_mean
allocations = c(50, 50)
allocations = c(1/2*100, 1/2*900)
allocations
sample_densities = c()
for(i in 1:2){
}
which(stratum == i)
allocations[i]
sample(x = which(stratum == i), size = allocations[i], replace = F)
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_densities
sample_densities = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
}
sample_densities
mean(sample_densities)
true_mean
areas/sum(allocations)
allocations = areas/sum(allocations) * c(100, 900)
allocations
allocations = floor(areas/sum(allocations) * c(100, 900))
allocations
100
areas/sum(allocations)
allocations = floor(areas/sum(pop) * c(100, 900))
allocations
areas
allocations = floor(pop/sum(pop) * c(100, 900))
allocations
sum(pop)
areas = c(1, 9) #square meters
pop = c(100, 900) #number of sampling units in each stratum
true_density = c(rnorm(100, 100, 10), rnorm(900, 3, 1/3))
stratum = c(rep(1, 100), rep(2, 900))
true_mean = mean(true_density)
allocations = floor(pop/sum(pop) * c(100, 900))
allocations
sample_densities = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
}
mean(sample_densities)
wh = allocations / pop
wh
Wh = pop / sum(pop)
Wh
allocations = floor(Wh * c(100, 900))
aggregate(sample_densities ~ stratum)
stratum
sample_densities
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_straum, rep(i, allocations_[i]))
}
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations_[i]))
}
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
aggregate(sample_densities ~ stratum, )
aggregate(sample_densities ~ sample_stratum, FUN = mean)
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)
sum(sample_mean * Wh)
Wh
sample_mean
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_mean
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
sum(sample_mean * Wh)
true_mean
SRS_mean = sum(sample_mean * Wh)
(Wh)
(Wh)^2 * (1-wh)
(Wh)^2 * (1-wh) / allocations
sample_var * (Wh)^2 * (1-wh) / allocations
sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
sqrt(SRS_var)
sqrt(SRS_var) / SRS_mean
SRS_mean = SRS_var = c()
sample_densities = c()
sample_stratum = c()
SRS_mean = SRS_CV = c()
sample_densities = c()
sample_stratum = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
SRS_CV
summary(SRS_mean)
true_cv
true_mean
sd(SRS_mean)
sd(SRS_mean) / true_mean
hist(SRS_CV)
abline(v = sd(SRS_mean) / true_mean)
plot(density(SRS_CV))
abline(v = sd(SRS_mean) / true_mean)
allocations = floor(Wh * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
for(iter in 1:10000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
plot(density(SRS_CV))
abline(v = sd(SRS_mean) / true_mean)
allocations = floor(c(0.05, 0.5) * c(100, 900))
allocations
wh = allocations / pop
SRS_mean = SRS_CV = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
plot(density(SRS_mean))
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV))
abline(v = sd(SRS_mean) / true_mean)
allocations = floor(c(0.0, 0.5) * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV))
abline(v = sd(SRS_mean) / true_mean)
SRS_mean
allocations = floor(c(0.01, 0.5) * c(100, 900))
wh = allocations / pop
allocations
allocations = floor(c(0.02, 0.5) * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
SRS_mean
wh
allocations
SRS_mean = SRS_CV = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV))
abline(v = sd(SRS_mean) / true_mean)
allocations = floor(c(0.03, 0.5) * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV)); abline(v = sd(SRS_mean) / true_mean)
par(mfrow = c(2,1))
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV)); abline(v = sd(SRS_mean) / true_mean)
allocations = floor(c(0.5, 0.5) * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
allocations
par(mfrow = c(2,1))
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV)); abline(v = sd(SRS_mean) / true_mean)
allocations = floor(c(0.75, 0.5) * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
par(mfrow = c(2,1))
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV)); abline(v = sd(SRS_mean) / true_mean)
allocations = floor(c(0.25, 0.5) * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
par(mfrow = c(2,1))
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV)); abline(v = sd(SRS_mean) / true_mean)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Wh
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
areas = c(1, 9) #square meters
pop = c(100, 900) #number of sampling units in each stratum
Wh = pop / sum(pop)
true_density = c(rnorm(100, 100, 10), rnorm(900, 3, 1))
stratum = c(rep(1, 100), rep(2, 900))
true_density
areas = c(1, 9) #square meters
pop = c(100, 900) #number of sampling units in each stratum
Wh = pop / sum(pop)
true_density = c(rnorm(100, 100, 30), rnorm(900, 3, 1/3))
stratum = c(rep(1, 100), rep(2, 900))
true_mean = mean(true_density)
true_mean
allocations = floor(c(0.02, 0.98) * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
par(mfrow = c(2,1))
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV)); abline(v = sd(SRS_mean) / true_mean)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
sd(SRS_mean) / true_mean
(3/10)^2
source('~/.active-rstudio-document', echo=TRUE)
par(mfrow = c(2,1))
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV)); abline(v = sd(SRS_mean) / true_mean)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
100/10
100/5
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
100/7.5
100/12.5
100/7.5
100/7
100/6.5
source('~/.active-rstudio-document', echo=TRUE)
areas = c(1, 9) #square meters
pop = c(100, 900) #number of sampling units in each stratum
Wh = pop / sum(pop)
true_density = c(rnorm(100, 100, (100*0.15)^2 ), rnorm(900, 3, (3*0.10)^2 ))
stratum = c(rep(1, 100), rep(2, 900))
true_mean = mean(true_density)
allocations = floor(c(0.1, 0.9) * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
true_mean
true_density
true_density = c(rnorm(100, 100, 100*0.15 ), rnorm(900, 3, 3*0.10 ))
areas = c(1, 9) #square meters
pop = c(100, 900) #number of sampling units in each stratum
Wh = pop / sum(pop)
true_density = c(rnorm(100, 100, 100*0.15 ), rnorm(900, 3, 3*0.10 ))
stratum = c(rep(1, 100), rep(2, 900))
true_mean = mean(true_density)
allocations = floor(c(0.1, 0.9) * c(100, 900))
wh = allocations / pop
SRS_mean = SRS_CV = c()
for(iter in 1:1000){
sample_densities = c()
sample_stratum = c()
for(i in 1:2){
idx = sample(x = which(stratum == i), size = allocations[i], replace = F)
sample_densities = c(sample_densities, true_density[idx])
sample_stratum = c(sample_stratum, rep(i, allocations[i]))
}
sample_mean = aggregate(sample_densities ~ sample_stratum, FUN = mean)$sample_densities
sample_var = aggregate(sample_densities ~ sample_stratum, FUN = var)$sample_densities
SRS_mean[iter] = sum(sample_mean * Wh)
SRS_var = sum(sample_var * (Wh)^2 * (1-wh) / allocations)
SRS_CV[iter] = sqrt(SRS_var) / SRS_mean[iter]
}
par(mfrow = c(2,1))
plot(density(SRS_mean)); abline(v = true_mean)
plot(density(SRS_CV)); abline(v = sd(SRS_mean) / true_mean)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
##################################
## Simulate a Stratified Random Survey of the Gulf of Alaska Groundfish Survey
## Based on Current Stratifications
##################################
rm(list = ls())
##################################
## Set up directories
##################################
library(VAST)
library(readxl)
##################################
## Set up directories
##################################
which_machine = c('Zack_PC' =1, 'Zack_GI_PC'=2)[1]
github_dir = paste0(c('C:/Users/Zack Oyafuso/Documents',
'C:/Users/zack.oyafuso/Work')[which_machine],
'/GitHub/Optimal_Allocation_GoA/')
##################################
## Import Strata Allocations and spatial grid and predicted density
##################################
load(paste0(github_dir, 'data/optimization_data.RData'))
GOA_allocations = read_xlsx(paste0(github_dir, 'data/',
'GOA 2019 stations by stratum.xlsx'))
GOA_grid = make_extrapolation_info(Region = 'Gulf_of_Alaska')$Data_Extrap
rm(gulf_of_alaska_grid)
##################################
## Constants
##################################
Niter = 1000
nstrata = nrow(GOA_allocations)
##################################
## Simulate Survey
##################################
sim_mean = sim_cv = array(dim = c(NTime, ns, Niter, 3),
dimnames = list(paste0('Year_', 1:NTime),
sci_names,
NULL,
paste0('n=', c(280,550,820)) ))
set.seed(23234)
floor(GOA_allocations$`Number stations`*c(0.5,1,1.5)[isample])
